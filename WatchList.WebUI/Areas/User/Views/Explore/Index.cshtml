@model WatchList.WebUI.Areas.User.Controllers.ExplorePageViewModel
@{
    ViewData["Title"] = "Keşfet";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-3">
        <h2 class="fw-bold m-0">
            <i class="bi bi-stars text-warning me-2"></i> Keşfet
        </h2>

        <div class="input-group w-auto">
            <input type="text" class="form-control rounded-start-pill" placeholder="Liste ara..." />
            <button class="btn btn-outline-secondary rounded-end-pill">
                <i class="bi bi-search"></i>
            </button>
        </div>
    </div>

    <div class="btn-group mb-4">
        <button class="btn btn-outline-primary active" onclick="filterLists('movie')">Filmler</button>
        <button class="btn btn-outline-primary" onclick="filterLists('series')">Diziler</button>
        <button class="btn btn-outline-primary" onclick="filterLists('tier')">Tier List</button>
    </div>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="listsContainer">

        @foreach (var list in Model.MovieLists)
        {
            <div class="col list-item movie">
                <div class="card border-0 shadow-sm h-100 rounded-4 hover-scale">
                    <div class="card-body p-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="badge bg-danger-subtle text-danger">
                                <i class="bi bi-film me-1"></i> Film Listesi
                            </span>
                            <small class="text-muted">
                                <i class="bi bi-calendar2 me-1"></i> @list.CreatedDate.ToShortDateString()
                            </small>
                        </div>
                        <h5 class="fw-bold text-truncate">@list.Title</h5>
                        <p class="text-muted small">
                            <i class="bi bi-person-circle me-1"></i>
                            @(Model.UserNameDictionary.ContainsKey(list.AppUserId) ? Model.UserNameDictionary[list.AppUserId] : "Bilinmeyen")
                        </p>
                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <a href="/Lists/Details/@list.Id" class="btn btn-sm btn-primary rounded-pill px-3">
                                <i class="bi bi-eye me-1"></i> Görüntüle
                            </a>
@*                             <small class="text-muted">
                                <i class="bi bi-heart-fill text-danger me-1"></i> @list.LikeCount
                            </small> *@
                        </div>
                    </div>
                </div>
            </div>
        }

        @foreach (var list in Model.SeriesLists)
        {
            <div class="col list-item series d-none">
                <div class="card border-0 shadow-sm h-100 rounded-4 hover-scale">
                    <div class="card-body p-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="badge bg-success-subtle text-success">
                                <i class="bi bi-tv me-1"></i> Dizi Listesi
                            </span>
                            <small class="text-muted">
                                <i class="bi bi-calendar2 me-1"></i> @list.CreatedDate.ToShortDateString()
                            </small>
                        </div>
                        <h5 class="fw-bold text-truncate">@list.Title</h5>
                        <p class="text-muted small">
                            <i class="bi bi-person-circle me-1"></i>
                            @(Model.UserNameDictionary.ContainsKey(list.AppUserId) ? Model.UserNameDictionary[list.AppUserId] : "Bilinmeyen")
                        </p>
                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <a href="/Lists/SeriesDetails/@list.Id" class="btn btn-sm btn-success rounded-pill px-3">
                                <i class="bi bi-eye me-1"></i> Görüntüle
                            </a>
@*                             <small class="text-muted">
                                <i class="bi bi-heart-fill text-danger me-1"></i> @list.LikeCount
                            </small> *@
                        </div>
                    </div>
                </div>
            </div>
        }

        @foreach (var list in Model.TierLists)
        {
            <div class="col list-item tier d-none">
                <div class="card border-0 shadow-sm h-100 rounded-4 hover-scale">
                    <div class="card-body p-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="badge bg-info-subtle text-info">
                                <i class="bi bi-diagram-3 me-1"></i> Tier List
                            </span>
                            <small class="text-muted">
                                <i class="bi bi-calendar2 me-1"></i> @list.CreatedDate.ToShortDateString()
                            </small>
                        </div>
                        <h5 class="fw-bold text-truncate">@list.Title</h5>
                        <p class="text-muted small">
                            <i class="bi bi-person-circle me-1"></i>
                            @(Model.UserNameDictionary.ContainsKey(list.AppUserId) ? Model.UserNameDictionary[list.AppUserId] : "Bilinmeyen")
                        </p>
                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <a href="/Lists/TierDetails/@list.Id" class="btn btn-sm btn-info text-white rounded-pill px-3">
                                <i class="bi bi-eye me-1"></i> Görüntüle
                            </a>
@*                             <small class="text-muted">
                                <i class="bi bi-heart-fill text-danger me-1"></i> @list.LikeCount
                            </small> *@
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .hover-shadow {
        transition: all 0.3s ease;
    }

        .hover-shadow:hover {
            transform: translateY(-5px);
            box-shadow: 0 .5rem 1rem rgba(0,0,0,.15) !important;
        }

    .list-badge {
        position: absolute;
        top: -10px;
        right: 20px;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
    }

    .film-badge {
        background: linear-gradient(135deg, #f5505e, #ef1f36);
    }

    .series-badge {
        background: linear-gradient(135deg, #36d39a, #12a86d);
    }

    .tier-badge {
        background: linear-gradient(135deg, #ffc107, #ff9800);
    }

    .nav-tabs .nav-link {
        color: #6c757d;
        border: none;
        border-bottom: 2px solid transparent;
        padding: 0.75rem 1rem;
    }

        .nav-tabs .nav-link:hover {
            border-color: transparent;
            background-color: rgba(0,0,0,0.02);
        }

        .nav-tabs .nav-link.active {
            color: #0d6efd;
            background-color: transparent;
            border-bottom: 2px solid #0d6efd;
        }

    .card {
        border-radius: 12px;
        overflow: hidden;
    }

    .card-body {
        padding: 1.5rem;
    }

    .text-muted i.bi {
        opacity: 0.5;
    }

    .hover-scale {
        transition: transform 0.3s ease;
    }

        .hover-scale:hover {
            transform: scale(1.03);
        }

</style>

<script>
    function filterLists(type) {
        const all = document.querySelectorAll(".list-item");
        const buttons = document.querySelectorAll(".btn-group .btn");
        buttons.forEach(btn => btn.classList.remove("active"));
        event.target.classList.add("active");

        all.forEach(item => {
            if (item.classList.contains(type)) {
                item.classList.remove("d-none");
            } else {
                item.classList.add("d-none");
            }
        });
    }
</script>
